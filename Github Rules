# GitHub Management Guide

## 1. Repository Creation

**Responsibility:** Wissem
- For each new project, a separate repository will be created.
- Wissem will create the repository and add participants as collaborators.

**Steps to Create a Repository:**
1. Go to GitHub and log in to your account.
2. Click on the "New" button to create a new repository.
3. Name the repository according to the project name.
4. Add a description of the project.
5. Set the repository to "Private" or "Public" as needed.
6. Add collaborators to the repository.

## 2. Cloning the Repository

**Responsibility:** All Participants
- Each participant will clone the repository to their local machine.

**Steps to Clone the Repository:**
1. Navigate to the repository on GitHub.
2. Click on the "Code" button.
3. Copy the URL provided.
4. Open a terminal or Git Bash on your local machine.
5. Run the following command:
    ```sh
    git clone <repository_url>
    ```

## 3. Branching Strategy

**Responsibility:** All Participants
- Each participant will create a separate branch for their tasks.

**Steps to Create and Switch to a New Branch:**
1. Ensure you are in the repository directory:
    ```sh
    cd <repository_name>
    ```
2. Create a new branch:
    ```sh
    git checkout -b <branch_name>
    ```

## 4. Pull Requests and Code Reviews

**Responsibility:** All Participants and Reviewers
- Use pull requests (PRs) for merging changes into the main branch.
- PRs must be reviewed and approved before merging.

**Steps to Create a Pull Request:**
1. Push your branch to the repository:
    ```sh
    git push origin <branch_name>
    ```
2. Navigate to the repository on GitHub.
3. Click on the "Compare & pull request" button next to your branch.
4. Add a title and description to the PR, detailing the changes made.
5. Assign reviewers to the PR.

**Code Review Process:**
1. Reviewers will check the PR for code quality, functionality, and adherence to project standards.
2. Reviewers will leave comments and request changes if necessary.
3. Once approved, the PR can be merged into the main branch.

## 5. Issue Tracking and Task Assignment

**Responsibility:** All Participants
- Use GitHub Issues to track tasks, bugs, and feature requests.
- Be detailed in writing and assigning issues.

**Steps to Create and Assign an Issue:**
1. Navigate to the "Issues" tab in the repository.
2. Click on the "New issue" button.
3. Add a descriptive title and detailed description.
4. Assign the issue to a participant.
5. Add labels, milestones, and projects as needed.

**Issue Writing Guidelines:**
- Clearly state the problem or task.
- Include steps to reproduce bugs, expected vs. actual results for bugs.
- Provide detailed requirements and acceptance criteria for tasks and features.

## 6. Communication and Collaboration

**Responsibility:** All Participants
- Use comments in issues and pull requests for discussion and clarification.
- Regularly check and respond to notifications on GitHub.

## 7. Workflow Summary

1. **Repository Creation:** Wissem creates the repo and adds collaborators.
2. **Cloning:** Participants clone the repo to their local machines.
3. **Branching:** Participants create and switch to their own branches.
4. **Working on Tasks:** Participants complete their tasks on their branches.
5. **Creating Pull Requests:** Participants push their branches and create PRs.
6. **Code Review:** Reviewers check the PRs, leave comments, and approve changes.
7. **Merging:** Once approved, PRs are merged into the main branch.
8. **Issue Management:** Issues are created, detailed, and assigned to participants.
9. **Communication:** Participants use comments for discussions and clarifications.

By following this guide, we ensure that our projects are managed efficiently, code quality is maintained, and collaboration is streamlined.
